import T from"node:path";import M from"node:test";import R from"node:assert/strict";import w from"node:fs";import P from"node:path";var N=e=>e.type==="Literal";import{NodeTypes as r}from"freemarker-parser/lib/enum/NodeTypes.js";var m=e=>e.type===r.Program,a=e=>e.type===r.Assign,c=e=>e.type===r.Attempt;var f=e=>e.type===r.Condition;var l=e=>e.type===r.Global;var u=e=>e.type===r.Include;var y=e=>e.type===r.List,x=e=>e.type===r.Local;var b=e=>e.type===r.MacroCall;var h=e=>e.type===r.SwitchCase,S=e=>e.type===r.SwitchDefault,k=e=>e.type===r.Switch;var C=e=>e.type===r.Items;import I from"freemarker-parser";var L=new I.Parser;function F(e){return L.parse(e).ast}function d(e,t){if(t(e),m(e)||c(e))for(let o of e.body)d(o,t);else if(a(e)||l(e)||x(e)||b(e)||C(e)){if(e.body)for(let o of e.body)d(o,t)}else if(f(e)){for(let o of e.consequent)d(o,t);if(e.alternate)for(let o of e.alternate)d(o,t)}else if(y(e)){for(let o of e.body)d(o,t);if(e.fallback)for(let o of e.body)d(o,t)}else if(h(e)||S(e))for(let o of e.consequent)d(o,t);else if(k(e))for(let o of e.cases)d(o,t)}var i=!0;function p(e,t,o={name:e,dependencies:[]}){let g=i?e:P.join(t,e);i&&(i=!1);let A=w.readFileSync(g,"utf-8"),E=F(A);return d(E,s=>{u(s)&&s.params&&N(s.params)&&typeof s.params.value=="string"&&o.dependencies.push(p(s.params.value,t))}),o}import D from"node:path";function n(){return D.join(process.cwd(),"fixtures")}M("analyzeIncludeDirective",()=>{let e=[{name:"/includes-02.ftl",dependencies:[{name:"/basic-01.ftl",dependencies:[]},{name:"/basic-02.ftl",dependencies:[]}]},{name:"/basic-03.ftl",dependencies:[]}],t=n(),o=p(T.join(t,"includes-01.ftl"),n());R.deepEqual(o.dependencies,e)});
